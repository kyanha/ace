%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 240.998993 160.998993
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 240 160
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2002 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 140 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/Domain 0 def
/Encode 0 def
/Decode 0 def
/Size 0 def
/DataSource 0 def
/mIndex 0 def
/nDomain 0 def
/ival 0 def
/val 0 def
/nDomM1 0 def
/sizem1 0 def
/srcEncode 0 def
/srcDecode 0 def
/nRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/min 
{	
	2 copy gt
	{exch pop}{pop}ifelse
}bd	
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/inter	
{ 
	1 index sub 5 2 roll 	
	1 index sub				
	3 1 roll				
	sub 3 1 roll div mul add
}bd
/setupFunEvalN 
{
	begin
		/nDomM1 Domain length 2 idiv 1 sub store	
		/sizem1[
			0 1 nDomM1
			{
				Size exch get 1 sub
			}for
		]store			
		/srcEncode
			currentdict/Encode known
			{
				Encode
			}{
				[
					0 1 nDomM1
					{
						0 sizem1 3 -1 roll get
					}for
				]
			}ifelse
		store					
		/srcDecode 
			currentdict/Decode known		
			{Decode}{Range}ifelse
		store					
		/nRange Range length 2 idiv store
	end
}bd
/FunEvalN 
{
	begin
		
		nDomM1 -1 0
		{	
			2 mul/mIndex xs		
			Domain mIndex get max Domain mIndex 1 add get min		
			
			Domain mIndex get Domain mIndex 1 add get srcEncode mIndex get srcEncode mIndex 1 add get inter
			round cvi	
			
			0 max sizem1 mIndex 2 idiv get min	
			nDomM1 1 add 1 roll	
		}for
		
		nDomM1 1 add array astore/val xs	
		
		
		
		nDomM1 0 gt
		{
			0						
			nDomM1 -1 0				
			{	
				dup 0 gt
				{ 
					/mIndex xs
					val mIndex get 	
					1 index add 	
					Size mIndex 1 sub get	
					mul 					
					add						
				}{ 
					val exch get add
				}ifelse
			}for
		}{
			val 0 get	
		}ifelse
		
		
		nRange mul
		/ival xs
		0 1 nRange 1 sub
		{
			dup 2 mul/mIndex xs 
			ival	
			add DataSource exch get 
			
			0 255 				
			srcDecode mIndex 2 copy get 3 1 roll
			1 add get
			inter 
			Range mIndex get max Range mIndex 1 add get min
		}for	
	end 
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEvalN	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			
			/Domain load 0 get
			/Function load FunEvalN sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	
	/dx/Function load/Size get 0 get 1 sub 1 exch div store
	gsave
		/di ymax ymin sub store
		/Function load dup
		/Domain get dup 0 get exch 1 get 2 copy exch sub dx mul exch
		{
			1 index FunEvalN sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			
			/Domain load 1 get
			/Function load FunEvalN sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEvalN	
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			/Domain load 0 get/Function load FunEvalN sc
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	/Domain load dup 0 get exch 1 get	
	2 copy exch sub	Nsteps div			
	exch								
	{	
		1 index FunEvalN sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			/Domain load 1 get/Function load FunEvalN sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 240 160
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: JZPITN+Helvetica
%!PS-TrueTypeFont-1.0000-0.0000-2
14 dict begin/FontName /JZPITN+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /parenleft put
dup 34 /zero put
dup 35 /comma put
dup 36 /parenright put
dup 37 /one put
dup 38 /two put
dup 39 /c put
dup 40 /s put
dup 41 /quotesingle put
dup 42 /e put
dup 43 /r put
dup 44 /v put
dup 45 /l put
dup 46 /i put
dup 47 /n put
dup 48 /t put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -342 1 index div -914 2 index div 2036 3 index div 2100 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000003626670676D000000000000040000000322676C7966000000000000072400000C5668656164000000000000137C000000386868656100000000000013B400000024686D747800000000000013D8000000446C6F6361000000000000141C000000246D617870000000000000144000000020707265700000000000001460000003BB05C0001005BD00280580001A042F001F0000FFD90000FFDA0000FFD9FE55FFE605C70010FE6DFFF1033B000000B9000000B902FE3F3C00C0008D009B00AF000600A800C00028005E009800C9016A00B9015C00B400D6011E002E0080000400B8004C00CC01FFFFD1006600A400AF007400C2009500B1000C0028006D0015004C008E0125FF7A000C0040004C00620084FFA200240038008600BD0039005E008E00EDFFA9FFB300400052005500AA00AB00C200CB012302B10413FFAEFFE4000800510074008400AA00D1FF4CFFAF0012002C004200500051008400BE012503DAFF680018003B0098009C009F00A100C100EC018201B4FF68FF76FFD0FFE100020018001C00530053007D01B401E103AF0486FF9CFFEAFFFE001F0028002A00520060009300A300AA00AF00AF00C001000145016B0174019301950240028202B404850517FEFD00060029004700470048006F008800B400B900C400F200F901EF02180310037403C5FF35FFF3000B004B004C0052005500650076007600870087008E00AB00BB0106013001430150017D0194019501D3022A025502580277027802E6034E035C037903D3047304B2058C0598060BFEF5FFBBFFC7FFD50017001D005B0072007E009C00C200D000F400FA01030106011C0125013B0142015E015E0180019B02B901A101B9025001C001D002AA01DF01E301EF01FB0205020C0215022B0274029302AB02C202CE03690395039903DF03F5043E050205A105E5062507DBFE62FE89FECEFF3BFFE1FFF800030008002100390042004E005F0061006F00700034007F008E00AD00AD00AF00BD00C400C500C900C900C900E3011C00ED00F800F901000112011A0132014D014D014E014F01660169019E01BA01BA01BE01E301EF01F602000200020902110217021C02530262026D028002D50280031B032A034A035A03AF03AF03C803D603FB03FB04050413041504470449008C046D049A049A04A604A804B204CF0539053E054E055605800589058C036305D105D6067E068E06B206EF06F00728074C076F078C00B400C900C000C10000000000000000000000000004012400AF0032006E0063014401620096014301A10161008A00740064018801EF01700028FF5D037E0347023000AA00BE007B0062009A007D0089035C00A1FFD803AA00D70093006C0000008000A70442001D0597001D008200300000





9A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 17 dict dup begin
/.notdef 0 def
/quotesingle 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/zero 5 def
/one 6 def
/two 7 def
/c 8 def
/e 9 def
/i 10 def
/l 11 def
/n 12 def
/r 13 def
/s 14 def
/t 15 def
/v 16 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-342 -914 2036 2100}def
/UniqueID 4045371 def
currentdict currentfile eexec


6BC7C5A5EE8DD9EBB034DDCE68EDCC8B63A6275ECBBC5EE75F010F7D4767A9DEB0583654F8F9A55197D57EC51F1BB43749D28B79F1036A69CA2C2422386CB57BBE5EE294AEE2D0EECC14459D365E2E4632D16E0D794CD63D4F800BF685FA8EC3859A5C69CCF53912CE361E9BD23FB9B85A4FA6D9BA7A4DD2B8A6274258C7DAB4065117C8FC2919E2AA35C7D7ED056909B0EECEAD8479E67E4494B4FF901526A40ABED6AF875875FC47F530438756CC93B0F061B9F525D9ED10B0C98A64F402206DBF1CD1764DB6C313462614852FCF23A4E1BEAD023E65C1364CA437C3591C7BB764BEF84D175724A7B1459A13A4CA3DDB2E23EBF599D7ADDC0430AC35355DF37DC365F0C9EFA5E303646428D1577065F3A3D117DB15F2E613A7C91F76386395277871CE2DDC0F058A46C610394D6AA262EF83E3478BAD8361ED20F914A305DDFA94F718B8C70DA9C71DA19FFE50A57431E4333616298580557E914226E8EA7B1E37E2E0B5AC861259710FC66FA377807FE95D922AA5262429EC7E2F774CDAD8409D6B7D114D95861917B50C45BFCC46D218B996EA63D9892BC18BC6C6B4FC3AC7F1AB29AE1B77D1B153D87FF045A36D2990DCBEA17E82966A8F5AB04235D4C1001D1232BB59048477A173745FC445D938D78487AB0D475D347C3114B73084E94AD4F4F80EB21F863358E7BBDC324A98313BEBDC390A1732BBAA6C7BF530
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End

%RBIEndFontSubset
/JZPITN+Helvetica cguidfix
/F1.1/JZPITN+Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4294 0.2332 0.0202 0.3278 0.6737 0.1105 0.1933 0.0938 0.9580 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 240.99899 160.99899 rc
0 161 m
241 161 l
241 0 l
0 0 l
h
f
0 sc
1 0 0 -1 117.99899 152.87338 cm
/F1.1[ 12 0 0 -12 0 0]sf
-12.336914 4.5 m
(!"#"$)[ 3.996094 6.673828 3.333984 6.673828 3.996094 ] xS
1 0 0 -1 81.998993 116.87338 cm
-12.336914 4.5 m
(!%#"$)[ 3.996094 6.673828 3.333984 6.673828 3.996094 ] xS
1 0 0 -1 45.998993 80.873383 cm
-12.336914 4.5 m
(!&#"$)[ 3.996094 6.673828 3.333984 6.673828 3.996094 ] xS
1 0 0 -1 117.99899 80.873383 cm
-12.336914 4.5 m
(!%#%$)[ 3.996094 6.673828 3.333984 6.673828 3.996094 ] xS
1 0 0 -1 81.998993 44.873383 cm
-12.336914 4.5 m
(!&#%$)[ 3.996094 6.673828 3.333984 6.673828 3.996094 ] xS
1 0 0 -1 153.99899 44.873383 cm
-12.336914 4.5 m
(!%#&$)[ 3.996094 6.673828 3.333984 6.673828 3.996094 ] xS
1 0 0 -1 117.99899 8.8733826 cm
-12.336914 4.5 m
(!&#&$)[ 3.996094 6.673828 3.333984 6.673828 3.996094 ] xS
1 0 0 -1 153.99899 116.87338 cm
-12.336914 4.5 m
(!"#%$)[ 3.996094 6.673828 3.333984 6.673828 3.996094 ] xS
1 0 0 -1 189.99899 80.873383 cm
-12.336914 4.5 m
(!"#&$)[ 3.996094 6.673828 3.333984 6.673828 3.996094 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141.00101 231.99838 cm
252 86.125 m
235.3033 102.8217 l
S
CM
90.342499 125.21689 m
95.787216 127.69176 l
92.817368 130.66162 l
h
90.342499 125.21689 m
f
0 J
0 j
1 0 0 -1 -141.00101 231.99838 cm
231.34351 106.78149 m
236.78822 104.30662 l
233.81837 101.33676 l
h
231.34351 106.78149 m
S
0 i
/Cs1 SC
1 sc
CM
83.176376 150.34456 m
100.17638 150.34456 l
100.17638 136.34456 l
83.176376 136.34456 l
h
f
0 sc
1 0 0 -1 91.676376 143.34456 cm
-3.5 4 m
(')s
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141.00101 231.99838 cm
230 122.125 m
246.6967 138.8217 l
S
CM
109.65549 89.216888 m
107.18062 94.661606 l
104.21077 91.691757 l
h
109.65549 89.216888 m
f
0 J
0 j
1 0 0 -1 -141.00101 231.99838 cm
250.65649 142.78149 m
248.18163 137.33678 l
245.21178 140.30663 l
h
250.65649 142.78149 m
S
0 i
/Cs1 SC
1 sc
CM
73.02858 97.746719 m
99.02858 97.746719 l
99.02858 83.746719 l
73.02858 83.746719 l
h
f
0 sc
1 0 0 -1 86.02858 90.746719 cm
-8 4 m
(\(%\))[ 6.000000 6.673828 2.291016 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141.00101 231.99838 cm
266 86.125 m
282.69669 102.8217 l
S
CM
145.65549 125.21689 m
143.1806 130.66162 l
140.21075 127.69176 l
h
145.65549 125.21689 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -141.00101 231.99838 cm
286.65649 106.78149 m
284.18161 101.33676 l
281.21176 104.30662 l
h
286.65649 106.78149 m
S
0 i
/Cs1 SC
1 sc
CM
134.87567 153.09381 m
158.87567 153.09381 l
158.87567 139.09381 l
134.87567 139.09381 l
h
f
0 sc
1 0 0 -1 146.87567 146.09381 cm
-7 4 m
(\(%)[ 6.000000 6.673828 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141.00101 231.99838 cm
302 122.125 m
318.69669 138.8217 l
S
CM
181.65549 89.216888 m
179.1806 94.661606 l
176.21075 91.691757 l
h
181.65549 89.216888 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -141.00101 231.99838 cm
322.65649 142.78149 m
320.18161 137.33678 l
317.21176 140.30663 l
h
322.65649 142.78149 m
S
0 i
/Cs1 SC
1 sc
CM
169.99179 116.20992 m
193.99179 116.20992 l
193.99179 102.20992 l
169.99179 102.20992 l
h
f
0 sc
1 0 0 -1 181.99179 109.20992 cm
-7 4 m
(\(&)[ 6.000000 6.673828 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141.00101 231.99838 cm
266 158.125 m
282.69669 174.8217 l
S
CM
145.65549 53.216888 m
143.1806 58.661606 l
140.21075 55.691757 l
h
145.65549 53.216888 m
f
0 J
0 j
1 0 0 -1 -141.00101 231.99838 cm
286.65649 178.78149 m
284.18161 173.33678 l
281.21176 176.30663 l
h
286.65649 178.78149 m
S
0 i
/Cs1 SC
1 sc
CM
110.2562 62.28685 m
136.2562 62.28685 l
136.2562 48.28685 l
110.2562 48.28685 l
h
f
0 sc
1 0 0 -1 123.2562 55.28685 cm
-8 4 m
(\(&\))[ 6.000000 6.673828 2.291016 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141.00101 231.99838 cm
288 122.125 m
271.30331 138.8217 l
S
CM
126.3425 89.216888 m
131.78723 91.691757 l
128.81738 94.661606 l
h
126.3425 89.216888 m
f
0 J
0 j
1 0 0 -1 -141.00101 231.99838 cm
267.34351 142.78149 m
272.78824 140.30663 l
269.81839 137.33678 l
h
267.34351 142.78149 m
S
0 i
/Cs1 SC
1 sc
CM
117.77399 114.44215 m
137.77399 114.44215 l
137.77399 100.44215 l
117.77399 100.44215 l
h
f
0 sc
1 0 0 -1 127.77399 107.44215 cm
-5 4 m
('\))[ 6.000000 2.291016 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141.00101 231.99838 cm
314.35001 80.125 m
357.21896 120.95258 l
S
CM
220.27313 107.18373 m
217.66623 112.56649 l
214.76968 109.52511 l
h
220.27313 107.18373 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -141.00101 231.99838 cm
361.27414 124.81465 m
358.66724 119.43189 l
355.77069 122.47327 l
h
361.27414 124.81465 m
S
0 i
/Cs1 SC
1 sc
CM
194.99066 147.04202 m
239.99066 147.04202 l
239.99066 133.04202 l
194.99066 133.04202 l
h
f
0 sc
1 0 0 -1 217.49066 140.04202 cm
-17.5 4 m
(\(*+,*+)[ 6.000000 6.673828 3.996094 6.000000 6.673828 3.996094 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141.00101 231.99838 cm
207.19501 80.125 m
165.38853 117.6176 l
S
CM
20.218491 110.64192 m
25.789612 112.81738 l
22.985458 115.94417 l
h
20.218491 110.64192 m
f
0 J
0 j
1 0 0 -1 -141.00101 231.99838 cm
161.2195 121.35646 m
166.79062 119.181 l
163.98647 116.05421 l
h
161.2195 121.35646 m
S
0 i
/Cs1 SC
1 sc
CM
1.6941986 146.66954 m
41.694199 146.66954 l
41.694199 132.66954 l
1.6941986 132.66954 l
h
f
0 sc
1 0 0 -1 21.694199 139.66954 cm
-15 4 m
('-.*/0)[ 6.000000 2.666016 2.666016 6.673828 6.673828 3.333984 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -141.00101 231.99838 cm
324 158.125 m
307.30331 174.8217 l
S
CM
162.3425 53.216888 m
167.78723 55.691757 l
164.81738 58.661606 l
h
162.3425 53.216888 m
f
0 J
0 j
1 0 0 -1 -141.00101 231.99838 cm
303.34351 178.78149 m
308.78824 176.30663 l
305.81839 173.33678 l
h
303.34351 178.78149 m
S
0 i
/Cs1 SC
1 sc
CM
151.62723 79.063171 m
173.62723 79.063171 l
173.62723 65.063171 l
151.62723 65.063171 l
h
f
0 sc
1 0 0 -1 162.62723 72.063171 cm
-6 4 m
('\)\))[ 6.000000 2.291016 2.291016 ] xS
ep
end
%%Trailer
%%EOF
