<?xml version="1.0"?> 
<project name="ace" default="compile" 
	     xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	<property name="build.dir" value="build"/>
	<property name="build.classes" value="${build.dir}/classes"/>
	<property name="build.javadoc" value="${build.dir}/api"/>
	<property name="build.resources" value="${build.dir}/resources"/>
	<property name="build.testreports" value="${build.dir}/testreports"/>
	<property name="dist.dir" value="dist"/>
	<property name="docs.dir" value="doc/pdf"/>
	<property name="src.dir" value="src"/>
	<property name="src.test" value="${src.dir}/test"/>
	
	<artifact:remoteRepository id="remote.repository.ace" url="http://ace.iserver.ch/maven2/" />
	<artifact:remoteRepository id="remote.repository.maven" url="http://repo1.maven.org/maven2"/>
	
	<artifact:dependencies pathId="dependency.classpath">
		<dependency groupId="jdom" 
		            artifactId="jdom" 
		            version="1.0"/>
		<dependency groupId="commons-beanutils" 
		            artifactId="commons-beanutils" 
		            version="1.7.0"/>
		<dependency groupId="commons-logging" 
		            artifactId="commons-logging" 
		            version="1.0.4"
		            scope="runtime"/>
		<dependency groupId="glazedlists"
		            artifactId="glazedlists"
		            version="1.0.0"/>
		<dependency groupId="junit" 
		            artifactId="junit" 
		            version="3.8.1"/>
		<dependency groupId="easymock"
		            artifactId="easymock"
		            version="1.1"
		            scope="test"/>
		<dependency groupId="xml-apis" 
		            artifactId="xml-apis" 
		            version="2.0.2"
		            scope="runtime"/>
		<dependency groupId="xerces" 
		            artifactId="xercesImpl" 
		            version="2.6.2"
		            scope="runtime"/>
		<dependency groupId="log4j"
			        artifactId="log4j"
		            version="1.2.12"/>
		<dependency groupId="springframework"
			        artifactId="spring-core"
		            version="1.2.5"/>
		<dependency groupId="springframework"
		            artifactId="spring-beans"
		            version="1.2.5"/>
		<dependency groupId="springframework"
		            artifactId="spring-context"
		            version="1.2.5"/>
		<remoteRepository refid="remote.repository.maven" />
		<remoteRepository refid="remote.repository.ace" />
	</artifact:dependencies>
	
	<artifact:dependencies pathId="dependency.checkstyle">
		<dependency groupId="checkstyle"
		            artifactId="checkstyle"
		            version="4.0-beta4"/>
		<dependency groupId="antlr"
		            artifactId="antlr"
		            version="2.7.2"/>
		<dependency groupId="commons-beanutils"
		            artifactId="commons-beanutils"
		            version="1.7.0"/>
		<dependency groupId="commons-logging" 
		            artifactId="commons-logging" 
		            version="1.0.4"/>
		<dependency groupId="commons-collections"
		            artifactId="commons-collections"
		            version="3.1"/>
		<dependency groupId="regexp"
	                artifactId="regexp"
		            version="1.3"/>
	</artifact:dependencies>
	
	<path id="classpath">
		<path refid="dependency.classpath"/>
	</path>
	
	<path id="classpath.run">
		<path refid="dependency.classpath"/>
		<pathelement path="${build.classes}"/>
		<pathelement path="${build.resources}"/>
	</path>
	
	<target name="init">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.resources}"/>
		<mkdir dir="${build.testreports}"/>
	</target>
	
	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>
	
	<target name="compile" depends="init">
		<javac srcdir="${src.dir}/java" destdir="${build.classes}" target="1.4"
		       source="1.4" classpathref="classpath" debug="true" optimize="false"/>
	</target>
	
	<target name="resources" depends="compile">
		<copy todir="${build.resources}">
			<fileset dir="${src.dir}/resources">
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>
	
	<target name="compile-tests" depends="compile,resources">
		<javac srcdir="${src.test}" destdir="${build.classes}" target="1.4"
		       source="1.4" classpathref="classpath"
		       debug="true" optimize="false"/>
	</target>
	
	<target name="run" depends="resources">
		<echo>running ${class}</echo>
		<java classname="${class}" fork="true" classpathref="classpath.run"/>
	</target>
	
	<target name="javadoc" depends="compile">
		<javadoc destdir="${build.javadoc}" windowtitle="ACE API" source="1.4" classpathref="classpath">
		    <tag name="todo" scope="all" description="To do:" />
			<packageset dir="${src.dir}/java" defaultexcludes="yes">
				<include name="**/*"/>
				<exclude name="ch/iserver/ace/collaboration/jupiter/**"/>
			</packageset>
			<link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
		</javadoc>
	</target>
	
	<target name="test" depends="compile-tests">
		<junit showoutput="yes" printsummary="yes" fork="true" 
			haltonerror="true" 
			haltonfailure="true">
			<jvmarg value="-enableassertions"/>
			<jvmarg value="-Djava.awt.headless=true"/>
			<classpath refid="classpath.run"/>
			<formatter type="xml"/>
			<batchtest todir="${build.testreports}" unless="testcase">
				<fileset dir="${src.test}">
					<include name="**/*Test*.java"/>
					<exclude name="**/AllTests.java"/>
					<exclude name="ch/iserver/ace/test/AlgorithmTestCase.java"/>
					<exclude name="ch/iserver/ace/test/jupiter/JupiterTestCase.java"/>
					<exclude name="ch/iserver/ace/test/jupiter/TwoWayTestCase.java"/>
					<exclude name="ch/iserver/ace/test/jupiter/NWayTestCase.java"/>
					<exclude name="ch/iserver/ace/algorithm/jupiter/DelegateTestJupiter.java"/>
					<exclude name="ch/iserver/ace/algorithm/jupiter/server/TestNetService.java"/>
					<exclude name="ch/iserver/ace/algorithm/DummyDocumentModel.java"/>
				</fileset>
			</batchtest>
			<test if="testcase" todir="${build.testreports}" name="${testcase}"/>
		</junit>
	</target>
	
	<taskdef resource="checkstyletask.properties" classpathref="dependency.checkstyle"/>	
	
	<target name="checkstyle">
		<checkstyle config="checkstyle.xml">
			<fileset dir="src/java" includes="**/*.java"/>
			<property key="checkstyle.cache.file" file="build/cachefile"/>
			<property key="checkstyle.header.file" file="checkstyle-license.txt"/>
		</checkstyle>
	</target>

	<target name="checkstyle-file">
		<checkstyle config="checkstyle.xml" file="${file}">
			<property key="checkstyle.cache.file" file="build/cachefile"/>
			<property key="checkstyle.header.file" file="checkstyle-license.txt"/>
		</checkstyle>
	</target>
	
	<target name="publish-api" depends="javadoc">
		<scp todir="${username}:${password}@ace.iserver.ch:/home/ace/ace.iserver.ch/www/api">
			<fileset dir="${build.javadoc}">
				<include name="**/*"/>
			</fileset>
		</scp>
	</target>
	
	<target name="dist" depends="javadoc">
	    <tstamp/>
	    <property name="dist.dir.current" value="${dist.dir}/${DSTAMP}"/>
	    <delete dir="${dist.dir.current}"/>
	    <mkdir dir="${dist.dir.current}/"/>
	    <mkdir dir="${dist.dir.current}/docs"/>
	    <mkdir dir="${dist.dir.current}/docs/pm"/>
	    <mkdir dir="${dist.dir.current}/docs/products"/>
	    <copy todir="${dist.dir.current}/docs/api">
	        <fileset dir="${build.javadoc}"/>
	    </copy>
	    <copy todir="${dist.dir.current}/docs/pm">
	        <fileset dir="${docs.dir}">
	            <include name="projektantrag.pdf"/>
	            <include name="pflichtenheft.pdf"/>
	            <include name="projekthandbuch.pdf"/>
	            <include name="projektplan.pdf"/>
	            <include name="erfahrungsbericht.pdf"/>
	        </fileset>
	    </copy>
	    <copy todir="${dist.dir.current}/docs/products">
	        <fileset dir="${docs.dir}">
	            <include name="algorithm.pdf"/>
	            <include name="algorithm-impl.pdf"/>
	            <include name="finalreport.pdf"/>
	            <include name="gui.pdf"/>
	            <include name="network.pdf"/>
	            <include name="testframework.pdf"/>
	        </fileset>
	    </copy>
	    <copy todir="${dist.dir.current}/src">
	        <fileset dir="${src.dir}"/>
	    </copy>
	    <copy todir="${dist.dir.current}">
	        <fileset dir=".">
	            <include name="build.xml"/>
	            <include name="README"/>
	        </fileset>
	    </copy>
	</target>

</project>
